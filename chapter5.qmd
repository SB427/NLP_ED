---
title: "Rappel sur les pré-traitements"
---

```{r setup, include=TRUE,output=FALSE}
library(readxl)
library(tidyverse)
library(quanteda)
library(quanteda.textstats)
library(quanteda.textplots)
library(RColorBrewer)
library(cleanNLP)
library(ggwordcloud)


```


## Les données

```{r}
data <- read_csv("data/data_trustpilot_oiseaux.csv")

# cnlp_init_udpipe(model_name = "french")
# 
# annotate<-cnlp_annotate(data$comments, verbose = 100)
# ann_token<-annotate$token
# write_csv2(ann_token, "annotation_oiseaux.csv")
# write_rds(ann_token,"annotation_oiseaux.rds")

ann_token<-read_rds("data/annotation_oiseaux.rds")

```

## Reconstruire le texte

```{r}
data<-ann_token%>%
  filter(upos=="NOUN"|upos=="VERB"|upos=="ADJ"|upos=="ADV")%>%
  group_by(doc_id)%>%
  summarise(text=paste(lemma,collapse = " "))%>%
  inner_join(data, join_by("doc_id"=="id"))

corpus_new<-corpus(data, text_field = "text")

toks<-tokens(corpus_new)%>%
  tokens_replace(c("produire", "conformer","colir", "tre", "livrer", "n"), c("produit", "conforme","colis", "très", "livraison", "ne"))%>%
  tokens_remove(c(".",","))

colloc<-textstat_collocations(toks, min_count = 10, tolower = TRUE)

toks<-tokens_compound(toks, pattern = colloc[colloc$z>7,])

dfm<-dfm(toks)
head(textstat_frequency(dfm),50)
textplot_wordcloud(dfm, max_size = 4, max_words = 200)

```


## Analyse de *keyness*

Dans un premier temps, nous allons regarder le Net Promoter Score (NPS), puis nous étudierons les discours des promoteurs, détracteurs et passifs.

Tout d'abord, nous créons nos catégories en fonction des notes.

```{r nps}
col<- c("red","gold", "chartreuse")


data<-data %>%
  mutate(NPS=case_when(note<4~"Détracteurs",
                       note==4~"Passifs",
                       note>4~"Promoteurs"))


ggplot(data, aes(x=note))+
  geom_histogram(binwidth = 1, aes(fill=NPS))+
  labs( title= " Distribution des scores NPS", 
        subtitle = paste("Moyenne du NPS de l'échantillon",round(mean(data$note),1)), 
        caption = paste("Data : TrustPilot, n=",nrow(data)), 
        y = "Fréquence")+ 
  scale_fill_manual(values=col)+
  theme_light()

```

Puis nous réalisons un nuage de mots pour chaque groupe, afin d'avoir une idée de ce qui est exprimé.

```{r keyness1}
dfm$NPS<-data$NPS
# docvars(dfm)

dfm_gp <-dfm%>%
    dfm_group(groups = NPS)
# dfm_gp

stat<- dfm_gp %>% 
  textstat_frequency(n = 30,  groups = NPS)
# stat

ggplot(stat, aes(label = feature)) +
  geom_text_wordcloud(aes(size=log(frequency), color=group)) +
  theme_minimal()+
  facet_wrap(vars(group))+
  scale_color_manual(values=col)+ 
  labs(title="Nuage des 30 mots les plus fréquents (Par groupes)",
       caption = "La taille des mots est proportionnelle au log de leurs fréquences")


```

Maintenant, nous nous intéressons à ce qui caractérise chacun des groupes par rapport aux autres, grâce à la mesure du *keyness*.

```{r keyness2}

graph_promoteur<-textstat_keyness(dfm_gp, target = "Promoteurs")%>%
  textplot_keyness(n = 30L, labelsize = 2,   show_legend = FALSE, 
                     show_reference = FALSE,   color = c("Darkgreen", "gray"))+
  labs(x=NULL)


graph_detracteur <- textstat_keyness(dfm_gp, target = "Détracteurs" )%>%
  textplot_keyness(n = 30L, labelsize = 2,   show_legend = FALSE,   
                     show_reference = FALSE,   color = c("firebrick", "gray"))+ 
  labs(x=NULL)


graph_passif <- textstat_keyness(dfm_gp, target = "Passifs")%>%
  textplot_keyness(n = 30L, labelsize = 2,   show_legend = FALSE,   show_reference = FALSE,    color = c("gold2", "gray"))+
  labs(x=NULL)


library(cowplot)
p<- plot_grid(graph_detracteur, graph_passif ,graph_promoteur,  labels = c('Détracteurs', 'Passifs', 'Promoteurs'), label_size = 10, ncol=3)

title <- ggdraw() + draw_label("NPS : Les raisons qui conduisent à la recommandation (keyness)", fontface='bold')

note <- ggdraw()+ draw_text("Les valeurs représentent le keyness des termes.\nIl mesure leur caractère distinctif par une statistique du chi²", size=8,x = 0.5, y = 0.5)


plot_grid(title, p,note, ncol=1, rel_heights=c(0.1, 1)) # rel_heights values control title margins



```

## Diversité lexicale et lisibilité

```{r}

head(textstat_lexdiv(dfm))

head(textstat_readability(corpus_new))

```

